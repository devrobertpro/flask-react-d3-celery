version: '2' 

services:
  app:
    restart: always
    build: 
      context: ../../../
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - redis
      - postgres
    entrypoint: ["python", "flask_app.py"]
  
  celery:
    restart: always
    build: ../../../
    command: celery -A app.tasks worker -B -l info
    depends_on:
      - app
      - redis
      - postgres

  postgres:
    restart: always
    image: postgres:9.6
    ports:
      - "5432:5432"

  redis:
    image: redis
    environment:
      - REDIS_HOST=redis
    command: redis-server
    ports:
      - "6379:6379"

  client:
    build:
      context: ../../../
      dockerfile: Dockerfile-node
    volumes:
      - ../../../:/home/ubuntu/celery-scheduler/
      - /home/ubuntu/celery-scheduler/node_modules
    ports:
      - "3000:3000"
    command: /bin/bash -c "npm run build && npm start"
    depends_on:
      - app

  server:
    image: nginx
    ports:
     - "80:80"
    volumes:
#      - ../../../default.conf:/etc/nginx/conf.d/default.conf 
      - ../../../nginx.conf:/etc/nginx/nginx.conf
    command: /bin/bash -c "nginx -c nginx.conf && tail -f /dev/null"
    depends_on:
      - app
      - client
