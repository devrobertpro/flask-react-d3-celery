version: '2' 

services:
  app:
    restart: always
    build: 
      context: ../../../
      dockerfile: Dockerfile
    env_file:
      - dev-variables.env
    ports:
      - 5000:5000
    volumes:
      - ../../../:/app
    depends_on:
      - redis
      - postgres
    command: /bin/bash -c "flask recreate db && flask results && python flask_app.py"

  celery:
    restart: always
    build: ../../../
    env_file:
      - dev-variables.env
    command: celery -A app.tasks worker -B -l info
    volumes:
      - ../../../:/app
    depends_on:
      - app
      - redis
      - postgres

  postgres:
    restart: always
    image: postgres:9.6
    env_file:
      - dev-variables.env
    volumes:
      - ./temp-postgres-data/data:/home/ubuntu/celery-scheduler/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis
    command: redis-server
    ports:
      - "6379:6379"

  client:
    build:
      context: ../../../
      dockerfile: Dockerfile-node
    volumes:
      - ../../../:/home/ubuntu/celery-scheduler/
      - /home/ubuntu/celery-scheduler/node_modules
    ports:
      - 3007:3000
    env_file:
      - dev-variables.env
    command: /bin/bash -c "npm run dev-build && npm start"
    depends_on:
      - app

