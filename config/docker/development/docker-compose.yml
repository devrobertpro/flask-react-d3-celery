version: '2' 

services:
  app:
    restart: always
    build: 
      context: ../../../
      dockerfile: Dockerfile
    env_file:
      - dev-variables.env
    volumes:
      - ../../../:/app
    ports:
      - "5000:5000"
    command: /bin/bash -c "flask recreate_db && flask get_results && flask get_qual && flask get_pitstops && python flask_app.py"
    depends_on:
      - redis
      - postgres

  celery:
    restart: always
    build: ../../../
    env_file:
      - dev-variables.env
    volumes:
      - ../../../:/app
    command: /bin/bash -c "sleep 180 && celery -A app.tasks worker -B -l info"
    depends_on:
      - app
      - redis
      - postgres

  postgres:
    restart: always
    image: postgres:9.6
    env_file:
      - dev-variables.env
    ports:
      - "5432:5432"

  redis:
    image: redis
    environment:
      - REDIS_HOST=redis
    ports:
      - "6379:6379"
    command: redis-server

  client:
    build:
      context: ../../../
      dockerfile: Dockerfile-node
    env_file:
      - dev-variables.env
    volumes:
      - ../../../:/home/ubuntu/celery-scheduler/
      - /home/ubuntu/celery-scheduler/node_modules
    ports:
      - "3000:3000"
    command: /bin/bash -c "npm run dev-build && npm start"
    depends_on:
      - app

